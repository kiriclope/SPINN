(undo-tree-save-format-version . 1)
"0aaaf75adef10fbddc4f18525f8bab2117eea0b2"
[nil current nil nil (25787 60047 928326 516000) 0 nil]
([nil nil ((#("#include <cmath>
" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 10 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62)) 10 15 (fontified t c-in-sws t face font-lock-string-face) 15 16 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60)) 16 17 (fontified t c-in-sws t)) . 58) (undo-tree-id261 . -16) (undo-tree-id262 . -17) (undo-tree-id264 . -17) (undo-tree-id266 . -17) (undo-tree-id268 . -17) (undo-tree-id270 . -17) (undo-tree-id272 . -17) (undo-tree-id274 . -17) (undo-tree-id276 . -17) (undo-tree-id278 . -17) (undo-tree-id280 . -17) (undo-tree-id282 . -17) (undo-tree-id284 . -17) (undo-tree-id286 . -17) (undo-tree-id288 . -17) (undo-tree-id290 . -17) (undo-tree-id292 . -17) (undo-tree-id294 . -17) (undo-tree-id296 . -17) (undo-tree-id298 . -17) (undo-tree-id300 . -17) (undo-tree-id302 . -17) (undo-tree-id304 . -17) (undo-tree-id306 . -17) (undo-tree-id308 . -17) (undo-tree-id310 . -17) (undo-tree-id312 . -17) (undo-tree-id314 . -17) (undo-tree-id316 . -17) (undo-tree-id318 . -17) (undo-tree-id320 . -17) (undo-tree-id322 . -17) (undo-tree-id324 . -17) (undo-tree-id326 . -17) (undo-tree-id328 . -17) (undo-tree-id330 . -17) (undo-tree-id332 . -17) (undo-tree-id334 . -17) (undo-tree-id336 . -17) (undo-tree-id338 . -17) (undo-tree-id340 . -17) (undo-tree-id342 . -17) (undo-tree-id344 . -17) (undo-tree-id346 . -17) (undo-tree-id348 . -17) (undo-tree-id350 . -17) (undo-tree-id352 . -17) (undo-tree-id354 . -17) (undo-tree-id355 . -17) (t 25774 46237 807772 367000)) ((58 . 75)) (25787 60047 618424 971000) 0 nil] [nil nil ((#("#include <cmath>
" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 10 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62)) 10 15 (fontified t c-in-sws t face font-lock-string-face) 15 16 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60)) 16 17 (fontified t c-in-sws t)) . -58) (undo-tree-id5 . -16) (undo-tree-id6 . -17) (undo-tree-id7 . -17) (undo-tree-id8 . -17) (undo-tree-id9 . -17) (undo-tree-id10 . -17) (undo-tree-id11 . -17) (undo-tree-id12 . -17) (undo-tree-id13 . -17) (undo-tree-id14 . -17) (undo-tree-id15 . -17) (undo-tree-id16 . -17) (undo-tree-id17 . -17) (undo-tree-id18 . -17) (undo-tree-id19 . -17) (undo-tree-id20 . -17) (undo-tree-id21 . -17) (undo-tree-id22 . -17) (undo-tree-id23 . -17) (undo-tree-id24 . -17) (undo-tree-id25 . -17) (undo-tree-id26 . -17) (undo-tree-id27 . -17) (undo-tree-id28 . -17) (undo-tree-id29 . -17) (undo-tree-id30 . -17) (undo-tree-id31 . -17) (undo-tree-id32 . -17) (undo-tree-id33 . -17) (undo-tree-id34 . -17) (undo-tree-id35 . -17) (undo-tree-id36 . -17) (undo-tree-id37 . -17) (undo-tree-id38 . -17) (undo-tree-id39 . -17) (undo-tree-id40 . -17) (undo-tree-id41 . -17) (undo-tree-id42 . -17) (undo-tree-id43 . -17) (undo-tree-id44 . -17) (undo-tree-id45 . -17) (undo-tree-id46 . -17) (undo-tree-id47 . -17) (undo-tree-id48 . -17) (undo-tree-id49 . -17) 75 (t 25774 46237 807772 367000)) ((nil ws-butler-chg delete 75 . 76) (58 . 75)) (25787 59864 930533 43000) 0 nil] [nil nil ((#("#include <iostream>
#include <fstream>
#include <string>
#include <cmath>
#include <random>
" 0 1 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 1 8 (fontified t face font-lock-preprocessor-face c-in-sws t) 8 9 (fontified t c-in-sws t) 9 10 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62) c-in-sws t) 10 18 (fontified t face font-lock-string-face c-in-sws t) 18 19 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60) c-in-sws t) 19 20 (fontified t c-in-sws t) 20 21 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 21 28 (fontified t face font-lock-preprocessor-face c-in-sws t) 28 29 (fontified t c-in-sws t) 29 30 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62) c-in-sws t) 30 37 (fontified t face font-lock-string-face c-in-sws t) 37 38 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60) c-in-sws t) 38 39 (fontified t c-in-sws t) 39 40 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 40 47 (fontified t face font-lock-preprocessor-face c-in-sws t) 47 48 (fontified t c-in-sws t) 48 49 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62) c-in-sws t) 49 55 (fontified t face font-lock-string-face c-in-sws t) 55 56 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60) c-in-sws t) 56 57 (fontified t c-in-sws t) 57 58 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 58 65 (fontified t face font-lock-preprocessor-face c-in-sws t) 65 66 (fontified t c-in-sws t) 66 67 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62) c-in-sws t) 67 72 (fontified t face font-lock-string-face c-in-sws t) 72 73 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60) c-in-sws t) 73 74 (fontified t c-in-sws t) 74 75 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 75 82 (fontified t face font-lock-preprocessor-face c-in-sws t) 82 83 (fontified t c-in-sws t) 83 84 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62) c-in-sws t) 84 90 (fontified t face font-lock-string-face c-in-sws t) 90 91 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60) c-in-sws t) 91 92 (fontified t c-in-sws t)) . 1) (undo-tree-id1 . -20) (undo-tree-id2 . -92) (undo-tree-id3 . -19) (undo-tree-id4 . -92) 93 (t 25774 46237 807772 367000)) ((nil ws-butler-chg delete 93 . 94) (1 . 93)) (25787 59853 405054 399000) 0 nil])
([nil nil ((#("#include <string>
" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 10 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62)) 10 16 (fontified t c-in-sws t face font-lock-string-face) 16 17 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60)) 17 18 (fontified t c-in-sws t)) . 40) (undo-tree-id50 . -17) (undo-tree-id51 . -18) (undo-tree-id53 . -18) (undo-tree-id55 . -18) (undo-tree-id57 . -18) (undo-tree-id59 . -18) (undo-tree-id61 . -18) (undo-tree-id63 . -18) (undo-tree-id65 . -18) (undo-tree-id67 . -18) (undo-tree-id69 . -18) (undo-tree-id71 . -18) (undo-tree-id73 . -18) (undo-tree-id75 . -18) (undo-tree-id77 . -18) (undo-tree-id79 . -18) (undo-tree-id81 . -18) (undo-tree-id83 . -18) (undo-tree-id85 . -18) (undo-tree-id87 . -18) (undo-tree-id89 . -18) (undo-tree-id91 . -18) (undo-tree-id93 . -18) (undo-tree-id95 . -18) (undo-tree-id97 . -18) (undo-tree-id99 . -18) (undo-tree-id101 . -18) (undo-tree-id103 . -18) (undo-tree-id105 . -18) (undo-tree-id107 . -18) (undo-tree-id109 . -18) (undo-tree-id111 . -18) (undo-tree-id113 . -18) (undo-tree-id115 . -18) (undo-tree-id117 . -18) (undo-tree-id119 . -18) (undo-tree-id121 . -18) (undo-tree-id123 . -18) (undo-tree-id125 . -18) (undo-tree-id127 . -18) (undo-tree-id129 . -18) (undo-tree-id131 . -18) (undo-tree-id133 . -18) (undo-tree-id135 . -18) (undo-tree-id137 . -18) (undo-tree-id139 . -18) (undo-tree-id140 . -18) (undo-tree-id142 . -18) (undo-tree-id144 . -18) (undo-tree-id146 . -18) (undo-tree-id148 . -18) (undo-tree-id150 . -18) (undo-tree-id152 . -18) (undo-tree-id154 . -18) (undo-tree-id156 . -18) (undo-tree-id158 . -18) (undo-tree-id160 . -18) (undo-tree-id162 . -18) (undo-tree-id164 . -18) (undo-tree-id166 . -18) (undo-tree-id168 . -18) (undo-tree-id170 . -18) (undo-tree-id172 . -18) (undo-tree-id174 . -18) (undo-tree-id176 . -18) (undo-tree-id178 . -18) (undo-tree-id180 . -18) (undo-tree-id182 . -18) (undo-tree-id184 . -18) (undo-tree-id186 . -18) (undo-tree-id188 . -18) (undo-tree-id190 . -18) (undo-tree-id192 . -18) (undo-tree-id194 . -18) (undo-tree-id196 . -18) (undo-tree-id198 . -18) (undo-tree-id200 . -18) (undo-tree-id202 . -18) (undo-tree-id204 . -18) (undo-tree-id206 . -18) (undo-tree-id208 . -18) (undo-tree-id210 . -18) (undo-tree-id212 . -18) (undo-tree-id214 . -18) (undo-tree-id216 . -18) (undo-tree-id218 . -18) (undo-tree-id220 . -18) (undo-tree-id222 . -18) (undo-tree-id224 . -18) (undo-tree-id226 . -18) (undo-tree-id228 . -18) (undo-tree-id230 . -18) (undo-tree-id232 . -18) (undo-tree-id234 . -18) (undo-tree-id236 . -18) (undo-tree-id238 . -18) (undo-tree-id240 . -18) (undo-tree-id242 . -18) (undo-tree-id244 . -18) (undo-tree-id246 . -18) (undo-tree-id248 . -18) (undo-tree-id250 . -18) (undo-tree-id252 . -18) (undo-tree-id253 . -18) (undo-tree-id255 . -18) (undo-tree-id257 . -18) (undo-tree-id259 . -18) (undo-tree-id260 . -18)) ((40 . 58)) (25787 60047 123198 995000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . -1) (undo-tree-id0 . -1) 2) ((nil ws-butler-chg delete 2 . 3) (1 . 2)) (25787 59853 404390 19000) 0 nil])
([nil nil ((#("#include <iostream>
#include <fstream>
" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 10 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62)) 10 18 (fontified t c-in-sws t face font-lock-string-face) 18 19 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60)) 19 20 (fontified t c-in-sws t) 20 21 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face) 21 28 (fontified t c-in-sws t face font-lock-preprocessor-face) 28 29 (fontified t c-in-sws t) 29 30 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62)) 30 37 (fontified t c-in-sws t face font-lock-string-face) 37 38 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60)) 38 39 (fontified t c-in-sws t)) . -1) (undo-tree-id356 . -19) (undo-tree-id357 . -39) (undo-tree-id358 . -39) (undo-tree-id359 . -39) (undo-tree-id360 . -39) (undo-tree-id361 . -39) (undo-tree-id362 . -39) (undo-tree-id364 . -39) (undo-tree-id366 . -39) (undo-tree-id368 . -39) (undo-tree-id370 . -39) (undo-tree-id372 . -39) (undo-tree-id374 . -39) (undo-tree-id376 . -39) (undo-tree-id378 . -39) (undo-tree-id380 . -39) (undo-tree-id382 . -39) (undo-tree-id384 . -39) (undo-tree-id386 . -39) (undo-tree-id388 . -39) (undo-tree-id390 . -39) (undo-tree-id392 . -39) (undo-tree-id394 . -39) (undo-tree-id396 . -39) (undo-tree-id398 . -39) (undo-tree-id400 . -39) (undo-tree-id402 . -39) (undo-tree-id404 . -39) (undo-tree-id406 . -39) (undo-tree-id408 . -39) (undo-tree-id410 . -39) (undo-tree-id412 . -39) (undo-tree-id414 . -20) (undo-tree-id416 . -20) (undo-tree-id418 . -20) (undo-tree-id420 . -20) (undo-tree-id422 . -20) (undo-tree-id424 . -20) (undo-tree-id426 . -20) (undo-tree-id428 . -20) (undo-tree-id429 . -39) (undo-tree-id431 . -39) (undo-tree-id433 . -20) (undo-tree-id435 . -20) (undo-tree-id437 . -20) (undo-tree-id439 . -20) (undo-tree-id441 . -20) (undo-tree-id443 . -20) (undo-tree-id445 . -39) (undo-tree-id447 . -39) (undo-tree-id449 . -39) (undo-tree-id451 . -39) (undo-tree-id453 . -39) (undo-tree-id455 . -39) (undo-tree-id457 . -39) (undo-tree-id459 . -39) (undo-tree-id461 . -39) 40 (t 25787 59870 790749 519000)) ((1 . 40)) (25787 60046 750692 12000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . -18) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id473 . -1) (undo-tree-id475 . -1) (undo-tree-id477 . -1) (undo-tree-id479 . -1) (undo-tree-id481 . -1) (undo-tree-id483 . -1) (undo-tree-id485 . -1) (undo-tree-id487 . -1) (undo-tree-id489 . -1) (undo-tree-id491 . -1) (undo-tree-id493 . -1) (undo-tree-id495 . -1) (undo-tree-id497 . -1) (undo-tree-id499 . -1) (undo-tree-id501 . -1) (undo-tree-id503 . -1) (undo-tree-id505 . -1) (undo-tree-id507 . -1) (undo-tree-id509 . -1) (undo-tree-id511 . -1) (undo-tree-id513 . -1) (undo-tree-id515 . -1) (undo-tree-id517 . -1) (undo-tree-id519 . -1) (undo-tree-id521 . -1) (undo-tree-id523 . -1) (undo-tree-id525 . -1) (undo-tree-id527 . -1) (undo-tree-id529 . -1) (undo-tree-id531 . -1) (undo-tree-id533 . -1) (undo-tree-id535 . -1) (undo-tree-id537 . -1) (undo-tree-id539 . -1) (undo-tree-id541 . -1) (undo-tree-id543 . -1) (undo-tree-id545 . -1) (undo-tree-id547 . -1) (undo-tree-id549 . -1) (undo-tree-id551 . -1) (undo-tree-id553 . -1) (undo-tree-id555 . -1) (undo-tree-id557 . -1) (undo-tree-id559 . -1) (undo-tree-id561 . -1) (undo-tree-id563 . -1) (undo-tree-id565 . -1) (undo-tree-id567 . -1) (undo-tree-id569 . -1) (undo-tree-id571 . -1) 19 (t 25787 59884 26668 18000)) ((18 . 19)) (25787 60046 287665 217000) 0 nil])
([nil nil ((#("#include <random>
" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 10 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62)) 10 16 (fontified t c-in-sws t face font-lock-string-face) 16 17 (fontified t c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60)) 17 18 (fontified t c-in-sws t)) . 1) (undo-tree-id573 . -17) (undo-tree-id574 . -17) (undo-tree-id575 . -17) (undo-tree-id576 . -17) (undo-tree-id577 . -17) (undo-tree-id578 . -17) (undo-tree-id579 . -17) (undo-tree-id580 . -17) (undo-tree-id581 . -17) (undo-tree-id583 . -17) (undo-tree-id585 . -17) (undo-tree-id587 . -17) (undo-tree-id589 . -17) (undo-tree-id591 . -17) (undo-tree-id593 . -17) (undo-tree-id595 . -17) (undo-tree-id597 . -17) (undo-tree-id599 . -17) (undo-tree-id601 . -17) (undo-tree-id603 . -17) (undo-tree-id605 . -17) (undo-tree-id607 . -17) (undo-tree-id609 . -17) (undo-tree-id611 . -17) (undo-tree-id613 . -17) (undo-tree-id615 . -17) (undo-tree-id617 . -17) (undo-tree-id619 . -17) (undo-tree-id621 . -17) (undo-tree-id623 . -17) (undo-tree-id625 . -17) (undo-tree-id627 . -17) (undo-tree-id629 . -17) (undo-tree-id631 . -17) (undo-tree-id633 . -17) (undo-tree-id635 . -17) (undo-tree-id637 . -17) (undo-tree-id639 . -17) (undo-tree-id641 . -17) (undo-tree-id643 . -17) (undo-tree-id645 . -17) (undo-tree-id647 . -17) (undo-tree-id649 . -17) (undo-tree-id651 . -17) (undo-tree-id653 . -17) (undo-tree-id655 . -17) (undo-tree-id656 . -18) (undo-tree-id658 . -18) (undo-tree-id659 . -18) (undo-tree-id661 . -18) (undo-tree-id663 . -18) (undo-tree-id665 . -18) (undo-tree-id667 . -18) (undo-tree-id669 . -18) (undo-tree-id671 . -18) (undo-tree-id673 . -18) (undo-tree-id675 . -18) (undo-tree-id677 . -18) (undo-tree-id679 . -18) (undo-tree-id681 . -18) (undo-tree-id683 . -18) 19 (t 25787 59897 390585 726000)) ((1 . 19) (t 25787 59919 766447 936000)) (25787 59919 769063 609000) 0 nil])
nil
